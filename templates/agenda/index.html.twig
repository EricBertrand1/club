{% extends 'base.html.twig' %}

{% block title %}Agenda{% endblock %}

{% block body %}
<h1>Agenda - Semaine du {{ days[0]|date('d/m/Y') }} au {{ days[6]|date('d/m/Y') }}</h1>

<div class="mb-3 d-flex justify-content-between align-items-start">
    <div class="d-flex gap-2">
        <a class="btn btn-outline-primary" href="{{ path('agenda', {'weekOffset': weekOffset - 1}) }}">
            Semaine précédente
        </a>
        <a class="btn btn-outline-primary" href="{{ path('agenda', {'weekOffset': weekOffset + 1}) }}">
            Semaine suivante
        </a>
    </div>

    <div class="d-flex flex-column align-items-end gap-2">
        <button type="button"
                class="btn btn-outline-secondary"
                onclick="window.location.href='/';">
            Quitter
        </button>

        <a class="btn btn-success" href="{{ path('event_new') }}">Ajouter un événement</a>
    </div>
</div>


{% set jours = {
    'Monday': 'Lundi',
    'Tuesday': 'Mardi',
    'Wednesday': 'Mercredi',
    'Thursday': 'Jeudi',
    'Friday': 'Vendredi',
    'Saturday': 'Samedi',
    'Sunday': 'Dimanche'
} %}

<table class="table table-bordered text-center">
    <thead>
        <tr>
            <th class="hour-col">Heure</th>
            {% for idx, day in days %}
                {% set jourNom = jours[day|date('l')] %}
                {% set classesJour = (isToday[idx] ? 'today ' : '') ~ (jourNom == 'Dimanche' ? 'dimanche' : '') %}
                {% set dayKey = day|date('Y-m-d') %}
                <th class="{{ classesJour }} day-col">
                    {{ jourNom }}<br>{{ day|date("d/m") }}<br>
                    <small class="saint text-muted">{{ saints[dayKey] ?? '-' }}</small>
                </th>
            {% endfor %}
        </tr>
    </thead>
        <tbody>
        {% for hour in hours %}
            <tr>
                <td class="hour-col">{{ hour }}h</td>
                {% for idx, day in days %}
                    {% set dayKey = day|date('Y-m-d') %}
                    {% set hourKey = '%02d'|format(hour) %}
                    <td class="day-col addable-cell"
                        data-date="{{ dayKey }}"
                        data-hour="{{ hourKey }}"
                        title="Ajouter un événement le {{ day|date('d/m') }} à {{ hour }}h">

                        {% if events[dayKey][hourKey] is defined %}
                            {% for event in events[dayKey][hourKey] %}
                                {% set eventClass = event.type|lower|replace({' ':'-','é':'e','è':'e','à':'a','ç':'c'}) %}
                                <a href="{{ path('event_edit', {'id': event.id}) }}" class="text-decoration-none">
                                    <div class="event-box {{ eventClass }}">
                                        {{ event.texteCourt }}
                                    </div>
                                </a>
                            {% endfor %}
                        {% else %}
                            -
                        {% endif %}
                    </td>
                {% endfor %}
            </tr>
        {% endfor %}
    </tbody>
</table>

<script>
document.addEventListener('DOMContentLoaded', function () {
  document.querySelectorAll('td.addable-cell').forEach(function (td) {
    td.addEventListener('click', function (e) {
      // Si on clique sur un lien (ex: un événement existant), on ne fait rien
      if (e.target.closest('a')) return;

      const date = this.dataset.date;
      const hour = this.dataset.hour;
      if (date && hour) {
        const url = "{{ path('event_new') }}?date=" + encodeURIComponent(date) + "&hour=" + encodeURIComponent(hour);
        window.location.href = url;
      }
    });
  });
});
</script>

{% endblock %}

{% block styles %}
<style>
/* Colonnes */
.hour-col { width: 6%; }
.day-col { width: 13%; }

/* Jour actuel en rouge */
th.today { color: red; font-weight: bold; }

/* Dimanche en fond gris clair */
th.dimanche { background-color: #f0f0f0; }

/* Colonnes et cellules centrées */
table.table-bordered th,
table.table-bordered td { text-align: center; vertical-align: middle; }

/* Style commun aux événements */
.event-box {
    display: block;
    padding: 0.25rem 0.5rem;
    margin-bottom: 0.25rem;
    border-radius: 0.25rem;
    text-align: center;
    font-weight: 500;
    text-decoration: none;
}

/* Couleurs par type d'événement */
.event-box.reunion-film { background-color: #007bff; color: white; }
.event-box.reunion-jeu { background-color: #28a745; color: white; }
.event-box.reunion-conference { background-color: #ffc107; color: black; }
.event-box.reunion-debat { background-color: #fd7e14; color: white; }
.event-box.reunion-organisation { background-color: #6f42c1; color: white; }
.event-box.reunion-atelier { background-color: #20c997; color: white; }
.event-box.reunion-divers { background-color: #17a2b8; color: white; }
.event-box.chantier-participatif { background-color: #e83e8c; color: white; }
.event-box.repas { background-color: #343a40; color: white; }

th .saint {
    display: block;     /* au lieu de inline-block */
    margin-top: .15rem;
    font-size: 0.85rem;
    color: #6c757d;
}

/* Rendre évident que la cellule est cliquable */
td.addable-cell { cursor: pointer; position: relative; }
td.addable-cell:hover { background-color: #f9fbff; }

</style>
{% endblock %}
