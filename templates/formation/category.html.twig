{% extends 'base.html.twig' %}
{% block title %}Formation — {{ label }}{% endblock %}

{% block body %}
<div class="container-fluid py-4">
  <div class="d-flex justify-content-between align-items-center mb-3">
    <h1 class="h5 m-0">Formation — {{ code }} — {{ label }}</h1>

    <div class="d-flex align-items-center gap-2">
      {# Champ + bouton "Ajouter" visibles uniquement si l'utilisateur a les droits #}
      {% if is_granted('ROLE_ADMIN') or is_granted('ROLE_TRAINING_EDITOR') %}
        <div class="input-group input-group-sm" style="width: 360px;">
          <input id="sub-new-name"
                 type="text"
                 class="form-control"
                 placeholder="Nouvelle sous-catégorie…">
          <button id="sub-new-btn"
                  class="btn btn-success"
                  data-url="{{ path('formation_sub_new') }}"
                  data-code="{{ code }}"
                  data-token="{{ csrf_token('formation_sub_new_' ~ code) }}">
            Ajouter
          </button>
        </div>
      {% endif %}

      <a class="btn btn-outline-secondary" href="{{ path('app_home') }}">Quitter</a>
    </div>
  </div>

  <div class="card">
    <div class="card-body p-0">
      <table class="table table-hover m-0 align-middle">
        <thead class="table-light">
          <tr>
            <th>Formation</th>
            <th class="text-end">Actions</th>
          </tr>
        </thead>
        <tbody>
        {% for sub in subs %}
          <tr onclick="location.href='{{ path('formation_show', { id: sub.id }) }}'" style="cursor:pointer">
            <td>
              {# L’intitulé pointe vers la visualisation (lecture seule) #}
              <a href="{{ path('formation_show', { id: sub.id }) }}"
                 onclick="event.stopPropagation();"
                 class="text-decoration-none">
                {{ sub.name }}
              </a>
            </td>
            <td class="text-end">
              {% if is_granted('ROLE_ADMIN') or is_granted('ROLE_TRAINING_EDITOR') %}
                <a href="{{ path('formation_show', { id: sub.id, edit: 1 }) }}"
                   class="btn btn-sm btn-primary"
                   onclick="event.stopPropagation();">
                  Éditer
                </a>
                <form method="post"
                      action="{{ path('formation_delete', { id: sub.id }) }}"
                      class="d-inline"
                      onsubmit="event.stopPropagation(); return confirm('Supprimer ?');">
                  <input type="hidden" name="_token" value="{{ csrf_token('formation_delete_' ~ sub.id) }}">
                  <button class="btn btn-sm btn-outline-danger" type="submit">Supprimer</button>
                </form>
              {% endif %}
            </td>
          </tr>
        {% else %}
          <tr><td colspan="2" class="text-muted fst-italic">Aucune sous-catégorie.</td></tr>
        {% endfor %}
        </tbody>
      </table>
    </div>
  </div>
</div>
{% endblock %}

{% block javascripts %}
  {{ parent() }}
  <script>
  document.addEventListener('DOMContentLoaded', function () {
    const btn   = document.getElementById('sub-new-btn');
    const input = document.getElementById('sub-new-name');
    if (!btn || !input) return;

    btn.addEventListener('click', async function () {
      const name = (input.value || '').trim();
      if (!name) { input.focus(); return; }

      const url   = btn.getAttribute('data-url');
      const code  = btn.getAttribute('data-code');
      const token = btn.getAttribute('data-token');

      const form = new FormData();
      form.append('code', code);
      form.append('name', name);
      form.append('_token', token);

      btn.disabled = true;

      try {
        const res  = await fetch(url, { method: 'POST', body: form });
        const data = await res.json();

        if (!res.ok || !data.ok) {
          let msg = 'Erreur.';
          if (data && data.error === 'exists') msg = 'Cette sous-catégorie existe déjà.';
          else if (data && data.error === 'csrf') msg = 'CSRF invalide.';
          else if (data && data.error === 'missing') msg = 'Nom manquant.';
          alert(msg);
          btn.disabled = false;
          return;
        }

        // Simple & robuste : recharger pour voir la nouvelle ligne
        location.reload();
      } catch (e) {
        console.error(e);
        alert('Erreur réseau.');
        btn.disabled = false;
      }
    });

    // Entrée dans le champ valide l’ajout
    input.addEventListener('keydown', (e) => {
      if (e.key === 'Enter') {
        e.preventDefault();
        btn.click();
      }
    });
  });
  </script>
{% endblock %}
