{% extends 'base.html.twig' %}
{% block title %}Castellum ‚Äî {{ mode == 'new' ? 'Nouvelle question' : '√âditer la question' }}{% endblock %}

{% block body %}
<div class="container py-5">
  <!-- Barre titre + actions -->
  <div class="d-flex justify-content-between align-items-center mb-3">
    <div>
      <h1 class="h4 m-0">{{ mode == 'new' ? 'Nouvelle question' : '√âditer la question' }}</h1>
      {% if form.vars.data and form.vars.data.id %}
        <div class="text-muted small">ID #{{ form.vars.data.id }}</div>
      {% endif %}
    </div>

    <div class="d-flex align-items-center gap-2">
      {% if mode == 'edit' and form.vars.data and form.vars.data.id %}
        <form method="post"
              action="{{ path('castellum_question_duplicate', { id: form.vars.data.id }) }}"
              class="d-inline">
          <input type="hidden" name="_token" value="{{ csrf_token('castellum_question_duplicate_' ~ form.vars.data.id) }}">
          <button class="btn btn-outline-secondary" type="submit">Dupliquer</button>
        </form>
      {% endif %}
      <a class="btn btn-outline-secondary" href="{{ path('castellum_questions', { id: subcategory.id }) }}">Quitter</a>
      <button class="btn btn-primary" type="submit" form="question-form">Enregistrer</button>
    </div>
  </div>

  {# Flashs #}
  {% for label, messages in app.flashes %}
    {% for message in messages %}
      <div class="alert alert-{{ label == 'success' ? 'success' : (label == 'danger' ? 'danger' : 'info') }}">{{ message }}</div>
    {% endfor %}
  {% endfor %}

  {{ form_start(form, { attr: { id: 'question-form' } }) }}
  {{ form_errors(form) }}

  <div class="row g-3">

    {# Ligne 1 : sous-cat√©gorie / niveau / type / Derni√®re modif (lecture seule) #}
    <div class="col-md-4">{{ form_row(form.subcategory) }}</div>
    <div class="col-md-3">{{ form_row(form.levelQuestion) }}</div>
    <div class="col-md-3">{{ form_row(form.questionType) }}</div>

    <div class="col-md-2">
      <label class="form-label">Derni√®re modif.</label>
      <input type="text"
             class="form-control"
             value="{{ form.vars.data.updatedAt ? form.vars.data.updatedAt|date('d/m/Y H:i') : '‚Äî' }}"
             disabled>
      <div class="form-text text-muted">üîí Mis √† jour automatiquement √† l‚Äôenregistrement</div>
    </div>

    {# Ligne 2 : sujet / dur√©e / coordonn√©es X Y #}
    <div class="col-md-5 col-xl-5">{{ form_row(form.subject) }}</div>
    <div class="col-md-3 col-xl-3">{{ form_row(form.durationSeconds) }}</div>
    <div class="col-md-2 col-xl-2">{{ form_row(form.coordX) }}</div>
    <div class="col-md-2 col-xl-2">{{ form_row(form.coordY) }}</div>

    {# Ligne 3 : formation (chapitre, paragraphe) #}
    <div class="col-md-6">{{ form_row(form.formationChapter) }}</div>
    <div class="col-md-6">{{ form_row(form.formationParagraph) }}</div>

    {# Ligne 4 : textes principaux #}
    <div class="col-12">{{ form_row(form.questionText) }}</div>
    <div class="col-12">{{ form_row(form.answerText) }}</div>
    <div class="col-12">{{ form_row(form.explanation) }}</div>

    {# Ligne 5 : image de la question (champ texte + aper√ßu + upload + remove) #}
    {% set questionImagePath = form.vars.data and form.vars.data.questionImage ? form.vars.data.questionImage : null %}
    {% set questionImageSrc = questionImagePath ? (questionImagePath starts with 'http' ? questionImagePath : asset(questionImagePath)) : '' %}
    <div class="col-lg-7">
      <div class="mb-3">
        {{ form_label(form.questionImage) }}
        <div class="input-group">
          {{ form_widget(form.questionImage) }}
          <button class="btn btn-outline-secondary" type="button" data-file-trigger="{{ form.questionImageFile.vars.id }}">‚Ä¶</button>
        </div>
        {{ form_errors(form.questionImage) }}
        <div class="form-text">Saisissez un chemin ou utilisez le bouton pour s√©lectionner un fichier.</div>
      </div>
      <div>
        <div class="text-muted small mb-1">Aper√ßu</div>
        <img src="{{ questionImageSrc }}" alt="" class="img-fluid rounded border {{ questionImageSrc ? '' : 'd-none' }}" style="max-height:220px;" data-preview-id="question-image">
        <div class="text-muted small {{ questionImageSrc ? 'd-none' : '' }}" data-preview-placeholder="question-image">Aucune image s√©lectionn√©e.</div>
        {% if questionImagePath %}
          <div class="text-muted small text-break mt-2">{{ questionImagePath }}</div>
        {% endif %}
      </div>
    </div>
    <div class="col-lg-5">
      {{ form_widget(form.questionImageFile, { attr: { class: 'd-none file-input', 'data-path-input': form.questionImage.vars.id, 'data-preview-target': 'question-image' } }) }}
      {{ form_errors(form.questionImageFile) }}
      <div class="form-text">Choisir un fichier remplace l‚Äôimage actuelle.</div>
      {% if form.vars.data and form.vars.data.questionImage %}
        <div class="mt-3">{{ form_row(form.removeImage) }}</div>
      {% endif %}
    </div>

    {# Ligne 6 : audio de la question (aper√ßu + upload) #}
    <div class="col-md-6">
      <label class="form-label d-block">Aper√ßu audio (si pr√©sent)</label>
      {% if form.vars.data and form.vars.data.questionAudio %}
        <audio controls style="width:100%;">
          <source src="{{ asset(form.vars.data.questionAudio) }}">
          Votre navigateur ne supporte pas la balise audio.
        </audio>
      {% else %}
        <div class="text-muted small">Aucun fichier audio associ√©.</div>
      {% endif %}
    </div>
    <div class="col-md-6">
      {{ form_row(form.questionAudioFile) }}
      <div class="form-text">T√©l√©verser un nouveau fichier remplace l‚Äôancien.</div>
    </div>

    {# Ligne 7 : QCM ‚Äî Textes 1..10 #}
    <div class="col-12">
      <div class="card">
        <div class="card-header">R√©ponses QCM ‚Äî Textes</div>
        <div class="card-body">
          <div class="row g-3">
            <div class="col-md-6">{{ form_row(form.qcmText1) }}</div>
            <div class="col-md-6">{{ form_row(form.qcmText2) }}</div>
            <div class="col-md-6">{{ form_row(form.qcmText3) }}</div>
            <div class="col-md-6">{{ form_row(form.qcmText4) }}</div>
            <div class="col-md-6">{{ form_row(form.qcmText5) }}</div>
            <div class="col-md-6">{{ form_row(form.qcmText6) }}</div>
            <div class="col-md-6">{{ form_row(form.qcmText7) }}</div>
            <div class="col-md-6">{{ form_row(form.qcmText8) }}</div>
            <div class="col-md-6">{{ form_row(form.qcmText9) }}</div>
            <div class="col-md-6">{{ form_row(form.qcmText10) }}</div>
          </div>
        </div>
      </div>
    </div>

    {# Ligne 8 : QCM ‚Äî Images 1..10 (aper√ßus si existants + champs upload) #}
    <div class="col-12">
      <div class="card mt-3">
        <div class="card-header">R√©ponses QCM ‚Äî Images</div>
        <div class="card-body">
          <div class="row g-4">
            {% for i in 1..10 %}
              {% set imageField = attribute(form, 'qcmImage' ~ i) %}
              {% set fileField = attribute(form, 'qcmImageFile' ~ i) %}
              {% set getter = 'qcmImage' ~ i %}
              {% set hasValue = form.vars.data ? attribute(form.vars.data, getter, [], 'any', true, true) : false %}
              {% set currentPath = hasValue ? attribute(form.vars.data, getter, [], 'any', false, true) : null %}
              {% set previewSrc = currentPath ? (currentPath starts with 'http' ? currentPath : asset(currentPath)) : '' %}
              {% set previewId = 'qcm-image-' ~ i %}
              <div class="col-lg-6 col-xl-4">
                <div class="border rounded p-3 h-100 d-flex flex-column">
                  <div class="mb-3">
                    <strong>QCM image {{ i }}</strong>
                  </div>
                  <div class="mb-3">
                    {{ form_label(imageField) }}
                    <div class="input-group">
                      {{ form_widget(imageField) }}
                      <button class="btn btn-outline-secondary" type="button" data-file-trigger="{{ fileField.vars.id }}">‚Ä¶</button>
                    </div>
                    {{ form_errors(imageField) }}
                  </div>
                  <div class="mb-3">
                    <div class="text-muted small mb-1">Aper√ßu</div>
                    <img src="{{ previewSrc }}" alt="" class="img-fluid rounded border {{ previewSrc ? '' : 'd-none' }}" style="max-height:80px;" data-preview-id="{{ previewId }}">
                    <div class="text-muted small {{ previewSrc ? 'd-none' : '' }}" data-preview-placeholder="{{ previewId }}">Aucune image s√©lectionn√©e.</div>
                    {% if currentPath %}
                      <div class="text-muted small text-break mt-2">{{ currentPath }}</div>
                    {% endif %}
                  </div>
                  <div class="mt-auto">
                    {{ form_widget(fileField, { attr: { class: 'd-none file-input', 'data-path-input': imageField.vars.id, 'data-preview-target': previewId } }) }}
                    {{ form_errors(fileField) }}
                    <div class="form-text">Choisir un fichier remplace l‚Äôimage actuelle.</div>
                  </div>
                </div>
              </div>
            {% endfor %}
          </div>
        </div>
      </div>
    </div>

    {# Ligne 9 : validations #}
    <div class="col-md-4">{{ form_row(form.validationSignataire1) }}</div>
    <div class="col-md-4">{{ form_row(form.validationSignataire2) }}</div>
    <div class="col-md-4">{{ form_row(form.validationSignataire3) }}</div>

  </div>

  <div class="d-flex justify-content-end gap-2 mt-4">
    <a class="btn btn-outline-secondary" href="{{ path('castellum_questions', { id: subcategory.id }) }}">Quitter</a>
    <button class="btn btn-primary" type="submit">Enregistrer</button>
  </div>

  {{ form_end(form) }}
</div>
{% endblock %}

{% block javascripts %}
  {{ parent() }}
  <script>
    window.addEventListener('DOMContentLoaded', function () {
      document.querySelectorAll('[data-file-trigger]').forEach(function (button) {
        var targetId = button.getAttribute('data-file-trigger');
        if (!targetId) {
          return;
        }
        var input = document.getElementById(targetId);
        if (!input) {
          return;
        }
        button.addEventListener('click', function () {
          input.click();
        });
      });

      document.querySelectorAll('.file-input').forEach(function (input) {
        var pathFieldId = input.getAttribute('data-path-input');
        var pathField = pathFieldId ? document.getElementById(pathFieldId) : null;
        if (pathField && !pathField.dataset.originalValue) {
          pathField.dataset.originalValue = pathField.value || '';
        }

        var previewKey = input.getAttribute('data-preview-target');
        var preview = previewKey ? document.querySelector('[data-preview-id="' + previewKey + '"]') : null;
        var placeholder = previewKey ? document.querySelector('[data-preview-placeholder="' + previewKey + '"]') : null;
        if (preview && !preview.dataset.originalSrc) {
          preview.dataset.originalSrc = preview.getAttribute('src') || '';
          if (!preview.dataset.originalSrc) {
            preview.classList.add('d-none');
          }
        }

        input.addEventListener('change', function () {
          if (pathField) {
            if (input.files && input.files.length > 0) {
              pathField.value = input.files[0].name;
            } else {
              pathField.value = pathField.dataset.originalValue || '';
            }
          }

          if (preview) {
            if (preview.dataset.objectUrl) {
              URL.revokeObjectURL(preview.dataset.objectUrl);
              delete preview.dataset.objectUrl;
            }

            if (input.files && input.files.length > 0) {
              var url = URL.createObjectURL(input.files[0]);
              preview.src = url;
              preview.dataset.objectUrl = url;
              preview.classList.remove('d-none');
              if (placeholder) {
                placeholder.classList.add('d-none');
              }
            } else {
              var original = preview.dataset.originalSrc || '';
              if (original) {
                preview.src = original;
                preview.classList.remove('d-none');
                if (placeholder) {
                  placeholder.classList.add('d-none');
                }
              } else {
                preview.removeAttribute('src');
                preview.classList.add('d-none');
                if (placeholder) {
                  placeholder.classList.remove('d-none');
                }
              }
            }
          }
        });
      });
    });
  </script>
{% endblock %}
