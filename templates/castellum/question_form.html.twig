{% extends 'base.html.twig' %}
{% block title %}Castellum ‚Äî {{ mode == 'new' ? 'Nouvelle question' : '√âditer la question' }}{% endblock %}

{# Palette sobre et scoped #}
{% block stylesheets %}
  {{ parent() }}
  <style>
    .castellum-form {
      --bg-page: #ffffff;
      --card-bg: #ffffff;
      --card-border: #e5e7eb;
      --card-head-bg: #f3f4f6;
      --card-head-fg: #374151;

      --label-fg: #374151;
      --muted-fg: #6b7280;

      --field-bg: #f7f8fb;           /* fond doux */
      --field-bg-focus: #ffffff;      /* un peu plus clair au focus */
      --field-border: #cfd6e1;
      --field-border-focus: #9db4d6;  /* bleu-gris focus */
      --field-placeholder: #9aa3af;
      --ring: rgba(13,110,253,.08);   /* halo focus discret */
    }

    .castellum-form .form-label { color: var(--label-fg); }
    .castellum-form .text-muted { color: var(--muted-fg) !important; }

    .castellum-form .form-control,
    .castellum-form .form-select {
      background-color: var(--field-bg);
      border-color: var(--field-border);
      color: #111827;
    }
    .castellum-form .form-control::placeholder { color: var(--field-placeholder); }

    .castellum-form .form-control:focus,
    .castellum-form .form-select:focus {
      background-color: var(--field-bg-focus);
      border-color: var(--field-border-focus);
      box-shadow: 0 0 0 .2rem var(--ring);
    }

    .castellum-form .card {
      background-color: var(--card-bg);
      border-color: var(--card-border);
    }
    .castellum-form .card-header {
      background-color: var(--card-head-bg);
      color: var(--card-head-fg);
      border-bottom-color: var(--card-border);
      font-weight: 600;
    }

    /* Inputs dans input-group pour garder la teinte */
    .castellum-form .input-group .form-control {
      background-color: var(--field-bg);
      border-color: var(--field-border);
    }

    /* Aper√ßus et blocs visuels */
    .castellum-form img.border { border-color: var(--card-border) !important; }

    /* D√©sactiv√©s plus lisibles sur fond teint√© */
    .castellum-form .form-control:disabled,
    .castellum-form .form-select:disabled {
      background-color: #eef1f6;
      color: #6b7280;
    }
  </style>
{% endblock %}

{% block body %}
<div class="container-fluid py-5 castellum-form">
  <!-- Barre titre + actions -->
  <div class="d-flex justify-content-between align-items-center mb-3">
    <div>
      <h1 class="h4 m-0">{{ mode == 'new' ? 'Nouvelle question' : '√âditer la question' }}</h1>
      {% if form.vars.data and form.vars.data.id %}
        <div class="text-muted small">ID #{{ form.vars.data.id }}</div>
      {% endif %}
    </div>

    <div class="d-flex align-items-center gap-2">
      {% if mode == 'edit' and form.vars.data and form.vars.data.id %}
        <form method="post"
              action="{{ path('castellum_question_duplicate', { id: form.vars.data.id }) }}"
              class="d-inline">
          <input type="hidden" name="_token" value="{{ csrf_token('castellum_question_duplicate_' ~ form.vars.data.id) }}">
          <button class="btn btn-outline-secondary" type="submit">Dupliquer</button>
        </form>
      {% endif %}
      {% if returnTo is defined and returnTo %}
        <a class="btn btn-outline-secondary" href="{{ returnTo }}">Quitter</a>
      {% else %}
        <a class="btn btn-outline-secondary" href="{{ path('castellum_questions', { id: subcategory.id }) }}">Quitter</a>
      {% endif %}
      <button class="btn btn-primary" type="submit" form="question-form">Enregistrer</button>
    </div>
  </div>

  {# Flashs #}
  {% for label, messages in app.flashes %}
    {% for message in messages %}
      <div class="alert alert-{{ label == 'success' ? 'success' : (label == 'danger' ? 'danger' : 'info') }}">{{ message }}</div>
    {% endfor %}
  {% endfor %}

  {{ form_start(form, { attr: { id: 'question-form' } }) }}
  {{ form_errors(form) }}

  <div class="row g-3">

    <!-- Ligne 1 -->
    <div class="col-md-4">
      <div class="mb-3">
        {{ form_label(form.subcategory, 'Sous-cat√©gorie', {'label_attr': {'class': 'form-label d-block'}}) }}
        {{ form_widget(form.subcategory, {'attr': {'class': 'form-select w-100'}}) }}
        {{ form_errors(form.subcategory) }}
      </div>
    </div>

    <div class="col-md-3">
      <div class="mb-3">
        {{ form_label(form.levelQuestion, 'Niveau', {'label_attr': {'class': 'form-label d-block'}}) }}
        {{ form_widget(form.levelQuestion, {'attr': {'class': 'form-select w-100'}}) }}
        {{ form_errors(form.levelQuestion) }}
      </div>
    </div>

    <div class="col-md-3">
      <div class="mb-3">
        {{ form_label(form.questionType, 'Type de question', {'label_attr': {'class': 'form-label d-block'}}) }}
        {{ form_widget(form.questionType, {'attr': {'class': 'form-control w-100'}}) }}
        {{ form_errors(form.questionType) }}
      </div>
    </div>

    <div class="col-md-2">
      <label class="form-label">Derni√®re modif.</label>
      <input type="text"
             class="form-control"
             value="{{ form.vars.data.updatedAt ? form.vars.data.updatedAt|date('d/m/Y H:i') : '‚Äî' }}"
             disabled>
      <div class="form-text text-muted">üîí Mis √† jour automatiquement √† l‚Äôenregistrement</div>
    </div>

    <!-- Ligne 2 -->
    <div class="col-md-8 col-xl-8">
      {{ form_row(form.subject) }}
    </div>

    <div class="col-md-2 col-xl-2">
      <div class="d-flex align-items-center gap-2">
        {{ form_label(form.durationSeconds, 'Dur√©e max. (secondes)', { label_attr: {class: 'form-label mb-0 text-nowrap'} }) }}
        {{ form_widget(form.durationSeconds, {attr: {class: 'form-control'}}) }}
      </div>
      {{ form_errors(form.durationSeconds) }}
    </div>

    <div class="col-md-1 col-xl-1">
      <div class="d-flex align-items-center gap-2">
        {{ form_label(form.coordX, 'Coord. X', { label_attr: {class: 'form-label mb-0 text-nowrap'} }) }}
        {{ form_widget(form.coordX, {attr: {class: 'form-control'}}) }}
      </div>
      {{ form_errors(form.coordX) }}
    </div>

    <div class="col-md-1 col-xl-1">
      <div class="d-flex align-items-center gap-2">
        {{ form_label(form.coordY, 'Coord. Y', { label_attr: {class: 'form-label mb-0 text-nowrap'} }) }}
        {{ form_widget(form.coordY, {attr: {class: 'form-control'}}) }}
      </div>
      {{ form_errors(form.coordY) }}
    </div>

    <!-- Ligne 3 -->
    <div class="col-md-6">
      <div class="d-flex align-items-center gap-2">
        {{ form_label(form.formationChapter, 'Formation ‚Äî Chapitre', { label_attr: {class: 'form-label mb-0 text-nowrap'} }) }}
        {{ form_widget(form.formationChapter, { attr: { class: 'form-control' } }) }}
      </div>
      {{ form_errors(form.formationChapter) }}
    </div>

    <div class="col-md-6">
      <div class="d-flex align-items-center gap-2">
        {{ form_label(form.formationParagraph, 'Formation ‚Äî Paragraphe', { label_attr: {class: 'form-label mb-0 text-nowrap'} }) }}
        {{ form_widget(form.formationParagraph, { attr: { class: 'form-control' } }) }}
      </div>
      {{ form_errors(form.formationParagraph) }}
    </div>

    <!-- Ligne 4 : zones de texte pleine largeur -->
    <div class="col-12">
      <div class="mb-3">
        {{ form_label(form.questionText, '√ânonc√© de la question', {'label_attr': {'class': 'form-label d-block'}}) }}
        {{ form_widget(form.questionText, {'attr': {'class': 'form-control w-100', 'rows': 2}}) }}
        {{ form_errors(form.questionText) }}
      </div>
    </div>

    <div class="col-12">
      <div class="mb-3">
        {{ form_label(form.answerText, 'R√©ponse attendue', {'label_attr': {'class': 'form-label d-block'}}) }}
        {{ form_widget(form.answerText, {'attr': {'class': 'form-control w-100', 'rows': 2}}) }}
        {{ form_errors(form.answerText) }}
      </div>
    </div>

    <div class="col-12">
      <div class="mb-3">
        {{ form_label(form.explanation, 'Explication', {'label_attr': {'class': 'form-label d-block'}}) }}
        {{ form_widget(form.explanation, {'attr': {'class': 'form-control w-100', 'rows': 3}}) }}
        {{ form_errors(form.explanation) }}
      </div>
    </div>

    <!-- Ligne 5 : image principale -->
    {% set questionImagePath = form.vars.data and form.vars.data.questionImage ? form.vars.data.questionImage : null %}
    {% set questionImageSrc  = questionImagePath ? (questionImagePath starts with 'http' ? questionImagePath : asset(questionImagePath)) : '' %}
    <div class="col-lg-7">
      {{ form_label(form.questionImage) }}
      <div class="input-group mb-2">
        {{ form_widget(form.questionImage) }}
        <button class="btn btn-outline-secondary" type="button" data-file-trigger="{{ form.questionImageFile.vars.id }}">‚Ä¶</button>
        <button class="btn btn-outline-danger" type="button"
                data-remove-target="remove-image"
                data-file-input="{{ form.questionImageFile.vars.id }}"
                data-path-input="{{ form.questionImage.vars.id }}"
                data-preview-target="question-image">Retirer</button>
      </div>

      <div class="mt-2">
        <div class="text-muted small mb-1">Aper√ßu</div>
        <img src="{{ questionImageSrc }}" alt=""
             class="img-fluid rounded border {{ questionImageSrc ? '' : 'd-none' }}"
             style="max-height:220px;" data-preview-id="question-image">
        <div class="text-muted small {{ questionImageSrc ? 'd-none' : '' }}" data-preview-placeholder="question-image">
          Aucune image s√©lectionn√©e.
        </div>
        {% if questionImagePath %}
          <div class="text-muted small text-break mt-2">{{ questionImagePath }}</div>
        {% endif %}
      </div>
    </div>
    <div class="col-lg-5">
      {{ form_widget(form.questionImageFile, { attr: { class: 'd-none file-input', 'data-path-input': form.questionImage.vars.id, 'data-preview-target': 'question-image' } }) }}
      {{ form_errors(form.questionImageFile) }}
      <input type="hidden" name="removeImage" id="remove-image" value="0">
    </div>

    <!-- Ligne 6 : audio -->
    <div class="col-md-12">
      <label class="form-label">Fichier audio de la question</label>
      <div class="input-group mb-2">
        <input type="text" class="form-control" value="{{ form.vars.data.questionAudio ?? '' }}" placeholder="(aucun)" readonly>
        <button class="btn btn-outline-secondary" type="button" data-file-trigger="{{ form.questionAudioFile.vars.id }}">‚Ä¶</button>
        <button class="btn btn-outline-danger" type="button"
                data-remove-target="remove-audio"
                data-file-input="{{ form.questionAudioFile.vars.id }}"
                data-preview-audio="audio-preview">Retirer</button>
      </div>
      {{ form_widget(form.questionAudioFile, { attr: { class: 'd-none file-input', 'data-preview-audio': 'audio-preview' } }) }}

      <div>
        <label class="form-label d-block">Aper√ßu audio (si pr√©sent)</label>
        {% if form.vars.data and form.vars.data.questionAudio %}
          <audio id="audio-preview" controls style="width:100%;">
            <source src="{{ asset(form.vars.data.questionAudio) }}">
          </audio>
        {% else %}
          <audio id="audio-preview" controls style="width:100%; display:none;"></audio>
          <div class="text-muted small" data-audio-placeholder="audio-preview">Aucun fichier audio associ√©.</div>
        {% endif %}
      </div>

      <input type="hidden" name="removeAudio" id="remove-audio" value="0">
    </div>

    <!-- Ligne 7 : QCM ‚Äî Textes -->
    <div class="col-12">
      <div class="card">
        <div class="card-header">R√©ponses QCM ‚Äî Textes</div>
        <div class="card-body">
          <div class="row g-3">
            {% for i in 1..10 %}
              {% set f = attribute(form, 'qcmText' ~ i) %}
              <div class="col-md-6">
                <div class="d-flex align-items-center gap-2">
                  {{ form_label(f, 'R√©ponse texte QCM ' ~ i, {'label_attr': {'class': 'form-label mb-0 text-nowrap'}}) }}
                  {{ form_widget(f, {'attr': {'class': 'form-control flex-grow-1'}}) }}
                </div>
                {{ form_errors(f) }}
              </div>
            {% endfor %}
          </div>
        </div>
      </div>
    </div>

    <!-- Ligne 8 : QCM ‚Äî Images 1..9 -->
    <div class="col-12">
      <div class="card mt-3">
        <div class="card-header">R√©ponses QCM ‚Äî Images</div>
        <div class="card-body">
          <div class="row g-4">
            {% for i in 1..9 %}
              {% set imageField = attribute(form, 'qcmImage' ~ i) %}
              {% set fileField  = attribute(form, 'qcmImageFile' ~ i) %}
              {% set getter = 'qcmImage' ~ i %}
              {% set hasValue = form.vars.data ? attribute(form.vars.data, getter, [], 'any', true, true) : false %}
              {% set currentPath = hasValue ? attribute(form.vars.data, getter, [], 'any', false, true) : null %}
              {% set previewSrc = currentPath ? (currentPath starts with 'http' ? currentPath : asset(currentPath)) : '' %}
              {% set previewId = 'qcm-image-' ~ i %}
              <div class="col-xxl-4 col-lg-6">
                <div class="border rounded p-3 h-100 d-flex flex-column">
                  <div class="mb-2"><strong>QCM image {{ i }}</strong></div>

                  <div class="input-group mb-2">
                    {{ form_widget(imageField) }}
                    <button class="btn btn-outline-secondary" type="button" data-file-trigger="{{ fileField.vars.id }}">‚Ä¶</button>
                    <button class="btn btn-outline-danger" type="button"
                            data-remove-target="remove-qcm-{{ i }}"
                            data-file-input="{{ fileField.vars.id }}"
                            data-path-input="{{ imageField.vars.id }}"
                            data-preview-target="{{ previewId }}">Retirer</button>
                  </div>

                  <div class="mb-2">
                    <div class="text-muted small mb-1">Aper√ßu</div>
                    <img src="{{ previewSrc }}" alt=""
                         class="img-fluid rounded border {{ previewSrc ? '' : 'd-none' }}"
                         style="max-height:80px;" data-preview-id="{{ previewId }}">
                    <div class="text-muted small {{ previewSrc ? 'd-none' : '' }}"
                         data-preview-placeholder="{{ previewId }}">Aucune image s√©lectionn√©e.</div>
                    {% if currentPath %}
                      <div class="text-muted small text-break mt-2">{{ currentPath }}</div>
                    {% endif %}
                  </div>

                  {{ form_widget(fileField, { attr: { class: 'd-none file-input', 'data-path-input': imageField.vars.id, 'data-preview-target': previewId } }) }}
                  <input type="hidden" name="removeQcmImage[{{ i }}]" id="remove-qcm-{{ i }}" value="0">
                </div>
              </div>
            {% endfor %}
          </div>
        </div>
      </div>
    </div>

    <!-- Ligne 9 : validations -->
    <div class="col-md-4">
      <div class="d-flex align-items-center gap-2">
        {{ form_label(form.validationSignataire1, 'Validation ‚Äî Signataire 1', {'label_attr': {'class': 'form-label mb-0 text-nowrap'}}) }}
        {{ form_widget(form.validationSignataire1, {'attr': {'class': 'form-control'}}) }}
      </div>
      {{ form_errors(form.validationSignataire1) }}
    </div>

    <div class="col-md-4">
      <div class="d-flex align-items-center gap-2">
        {{ form_label(form.validationSignataire2, 'Validation ‚Äî Signataire 2', {'label_attr': {'class': 'form-label mb-0 text-nowrap'}}) }}
        {{ form_widget(form.validationSignataire2, {'attr': {'class': 'form-control'}}) }}
      </div>
      {{ form_errors(form.validationSignataire2) }}
    </div>

    <div class="col-md-4">
      <div class="d-flex align-items-center gap-2">
        {{ form_label(form.validationSignataire3, 'Validation ‚Äî Signataire 3', {'label_attr': {'class': 'form-label mb-0 text-nowrap'}}) }}
        {{ form_widget(form.validationSignataire3, {'attr': {'class': 'form-control'}}) }}
      </div>
      {{ form_errors(form.validationSignataire3) }}
    </div>

  </div>

  <div class="d-flex justify-content-end gap-2 mt-4">
    <a class="btn btn-outline-secondary" href="{{ path('castellum_questions', { id: subcategory.id }) }}">Quitter</a>
    <button class="btn btn-primary" type="submit">Enregistrer</button>
  </div>

  {{ form_end(form) }}
</div>
{% endblock %}

{% block javascripts %}
  {{ parent() }}
  <script>
    window.addEventListener('DOMContentLoaded', function () {
      document.querySelectorAll('[data-file-trigger]').forEach(function (btn) {
        const id = btn.getAttribute('data-file-trigger');
        const input = document.getElementById(id);
        if (!input) return;
        btn.addEventListener('click', () => input.click());
      });

      document.querySelectorAll('.file-input').forEach(function (input) {
        const pathId = input.getAttribute('data-path-input');
        const previewKey = input.getAttribute('data-preview-target');
        const audioKey = input.getAttribute('data-preview-audio');

        const pathField = pathId ? document.getElementById(pathId) : null;
        const img = previewKey ? document.querySelector('[data-preview-id="'+previewKey+'"]') : null;
        const placeholder = previewKey ? document.querySelector('[data-preview-placeholder="'+previewKey+'"]') : null;
        const audio = audioKey ? document.getElementById(audioKey) : null;
        const audioPh = audioKey ? document.querySelector('[data-audio-placeholder="'+audioKey+'"]') : null;

        if (img && !img.dataset.originalSrc) img.dataset.originalSrc = img.getAttribute('src') || '';
        if (pathField && !pathField.dataset.originalValue) pathField.dataset.originalValue = pathField.value || '';

        input.addEventListener('change', function () {
          if (pathField) pathField.value = (input.files && input.files[0]) ? input.files[0].name : (pathField.dataset.originalValue || '');

          if (img) {
            if (img.dataset.objectUrl) { URL.revokeObjectURL(img.dataset.objectUrl); img.dataset.objectUrl = ''; }
            if (input.files && input.files[0]) {
              const url = URL.createObjectURL(input.files[0]);
              img.src = url; img.dataset.objectUrl = url; img.classList.remove('d-none'); if (placeholder) placeholder.classList.add('d-none');
            } else {
              const original = img.dataset.originalSrc || '';
              if (original) { img.src = original; img.classList.remove('d-none'); if (placeholder) placeholder.classList.add('d-none'); }
              else { img.removeAttribute('src'); img.classList.add('d-none'); if (placeholder) placeholder.classList.remove('d-none'); }
            }
          }

          if (audio) {
            while (audio.firstChild) audio.removeChild(audio.firstChild);
            if (input.files && input.files[0]) {
              const url = URL.createObjectURL(input.files[0]);
              const src = document.createElement('source');
              src.src = url; audio.appendChild(src);
              audio.style.display = 'block'; if (audioPh) audioPh.style.display = 'none';
              audio.load();
            } else {
              audio.style.display = 'none'; if (audioPh) audioPh.style.display = '';
            }
          }
        });
      });

      document.querySelectorAll('[data-remove-target]').forEach(function (btn) {
        btn.addEventListener('click', function () {
          const hiddenId  = btn.getAttribute('data-remove-target');
          const fileId    = btn.getAttribute('data-file-input');
          const pathId    = btn.getAttribute('data-path-input');
          const previewId = btn.getAttribute('data-preview-target');
          const audioId   = btn.getAttribute('data-preview-audio');

          const hidden = hiddenId ? document.getElementById(hiddenId) : null;
          const file   = fileId ? document.getElementById(fileId) : null;
          const path   = pathId ? document.getElementById(pathId) : null;
          const img    = previewId ? document.querySelector('[data-preview-id="'+previewId+'"]') : null;
          const ph     = previewId ? document.querySelector('[data-preview-placeholder="'+previewId+'"]') : null;
          const audio  = audioId ? document.getElementById(audioId) : null;
          const audioPh= audioId ? document.querySelector('[data-audio-placeholder="'+audioId+'"]') : null;

          if (hidden) hidden.value = '1';
          if (file)   file.value = '';
          if (path)   path.value = '';

          if (img) { img.removeAttribute('src'); img.classList.add('d-none'); }
          if (ph)  { ph.classList.remove('d-none'); }

          if (audio) {
            while (audio.firstChild) audio.removeChild(audio.firstChild);
            audio.style.display = 'none';
            if (audioPh) audioPh.style.display = '';
          }
        });
      });
    });
  </script>
{% endblock %}
